Fiest I Created A normal class [Employee]
which typicla feature such as: Name, ID, Age, Salary, and age in the field
with a default construcotr so I can set the the dynamic arrays to ""<-- Empty strings --> so I can check if the Table[index] has an employee or not


With the HashTables:

HashTable using lnkedList [Separate Chaining]:
Before the class I had to create a simple Node of type struct <-- basic implementation of a linked list
to make the Linked list as separate chaning it meant that if and ID/key already exxisted the OBJ/employee was assigned onto the Node->next in the same node instead of being stored in the next available node[Linear probing]

in the dynamic array i made the default constructor create a new array of type employee <-- making it dynamic
then as there was no NULL unless it is a pointer/Node I had to check based on the string if = to "" then the Table[index] is empty and an employee can be put.
to makee it linear probing i made the insert function check if not empty then it would return a  recursive function of (key+1, employee) making it add the employee to the next available slot 

Bonus: Both The dynamic array and the linked list take the Objec[Employee] in 


Hash function 
I used (key % 10) in both the linkedlist and the dynamic array:
because I belive it is eassy to implement, memory efficient, and most importantly the indexes dont get lost as this implementation isnt as random as other hash functions and is easily understood 

In the int main to test both tables:
I fiest declared the 9 employees given
then sent them firstly to the linkedlist table, then printing the table to see how th e print function works then removing one of the employees, then getting number of collisons at the end and on the print function stating
 when it collided and why at the top and the total collison at the bottom

in the dynamic array i had a similiar apporach with declaring the tables adding the employyes to the table, printing the table content, removing an employee from the table, then conducting a search to make sure the array is working
then printng the collision rate

Bonus: Both The dynamic array and the linked list take the Objec[Employee] in 
